{
  "[astro]": {
    "editor.defaultFormatter": "astro-build.astro-vscode"
  },
  "animations.Command-Palette": "Fade",
  "animations.Enabled": true,
  "animations.Install-Method": "Custom CSS and JS",
  "animations.Scrolling": "Fade",
  "animations.Tabs": "Slide",
  "bookmarks.keepBookmarksOnLineDelete": true,
  "catppuccin-icons.hidesExplorerArrows": true,
  "debug.toolBarLocation": "docked",
  "diffEditor.hideUnchangedRegions.enabled": true,
  "diffEditor.renderSideBySide": true,
  "editor.cursorBlinking": "expand",
  "editor.cursorSmoothCaretAnimation": "on",
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.detectIndentation": false,
  "editor.fontFamily": "'MesloLGS Nerd Font', Consolas, 'Courier New', monospace",
  "editor.fontLigatures": true,
  "editor.formatOnSave": true,
  "editor.guides.bracketPairs": "active",
  "editor.guides.bracketPairsHorizontal": false,
  "editor.guides.highlightActiveBracketPair": false,
  "editor.guides.indentation": false,
  "editor.inlineSuggest.suppressSuggestions": true,
  "editor.lightbulb.enabled": "off",
  "editor.lineNumbers": "off",
  "editor.linkedEditing": true,
  "editor.minimap.enabled": false,
  "editor.overviewRulerBorder": false,
  "editor.renderLineHighlight": "gutter",
  "editor.renderWhitespace": "none",
  "editor.scrollbar.horizontal": "hidden",
  "editor.scrollbar.vertical": "hidden",
  "editor.tabSize": 2,
  "explorer.autoReveal": false,
  "explorer.compactFolders": false,
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  "extensions.experimental.affinity": {
    "asvetliakov.vscode-neovim": 1
  },
  "extensions.ignoreRecommendations": true,
  "files.autoSave": "afterDelay",
  "files.insertFinalNewline": true,
  "gitlens.telemetry.enabled": false,
  "javascript.preferences.jsxAttributeCompletionStyle": "braces",
  "javascript.updateImportsOnFileMove.enabled": "always",
  "markdown.updateLinksOnFileMove.enabled": "always",
  "remote.autoForwardPortsSource": "hybrid",
  "security.allowedUNCHosts": ["wsl.localhost"],
  "security.workspace.trust.untrustedFiles": "open",
  "terminal.integrated.cursorBlinking": true,
  "terminal.integrated.cursorStyle": "line",
  "terminal.integrated.cursorWidth": 2,
  "typescript.inlayHints.parameterNames.enabled": "all",
  "typescript.preferences.jsxAttributeCompletionStyle": "braces",
  "typescript.updateImportsOnFileMove.enabled": "always",
  "vscode-neovim.compositeKeys": {
    "jk": {
      "command": "vscode-neovim.escape"
    }
  },
  "vscode-neovim.neovimExecutablePaths.linux": "/home/linuxbrew/.linuxbrew/bin/nvim",
  "vscode-neovim.neovimInitVimPaths.linux": "/mnt/c/Users/tonyb/AppData/Roaming/Code/User/nvim/init.lua",
  "vscode-neovim.useWSL": true,
  "vscode-neovim.wslDistribution": "Ubuntu",
  "vscode_custom_css.imports": [
    "file:///c:/Users/tonyb/.vscode/extensions/brandonkirbyson.vscode-animations-2.0.4/dist/updateHandler.js"
  ],
  "whichkey.bindingOverrides": [
    {
      "keys": "!",
      "position": -1
    },
    {
      "keys": "\"",
      "position": -1
    },
    {
      "keys": "'",
      "position": -1
    },
    {
      "keys": "$",
      "position": -1
    },
    {
      "keys": "*",
      "position": -1
    },
    {
      "keys": [
        "\t"
      ],
      "position": -1
    },
    {
      "keys": "g.i",
      "position": -1
    },
    {
      "keys": "w.x",
      "position": -1
    },
    {
      "command": "whichkey.repeatRecent",
      "keys": ">",
      "name": "Repeat recent",
      "type": "command"
    },
    {
      "command": "workbench.action.terminal.openNativeConsole",
      "keys": "/",
      "name": "Open new external terminal",
      "type": "command"
    },
    {
      "commands": [
        "editor.action.clipboardPasteAction",
        "vscode-neovim.escape"
      ],
      "keys": "P",
      "name": "Paste from clipboard",
      "type": "commands"
    },
    {
      "commands": [
        "editor.action.clipboardCopyAction",
        "vscode-neovim.escape"
      ],
      "keys": "Y",
      "name": "Yank to clipboard",
      "type": "commands"
    },

    // +BUFFER
    {
      "command": "workbench.action.closeOtherEditors",
      "keys": "b.d",
      "name": "Delete editors in group",
      "type": "command"
    },
    {
      "command": "workbench.action.closeEditorsInGroup",
      "keys": "b.D",
      "name": "Delete all editors in group",
      "type": "command"
    },
    {
      "command": "workbench.action.pinEditor",
      "keys": "b.p",
      "name": "Pin buffer",
      "type": "command"
    },
    {
      "command": "workbench.action.unpinEditor",
      "keys": "b.P",
      "name": "Unpin buffer",
      "type": "command"
    },

    // +CODE
    {
      "bindings": [
        {
          "command": "editor.action.codeAction",
          "key": "a",
          "name": "Code action",
          "type": "command"
        },
        {
          "command": "workbench.panel.chat.view.copilot.focus",
          "key": "c",
          "name": "GitHub Copilot Chat",
          "type": "command"
        },
        {
          "command": "editor.action.format",
          "key": "f",
          "name": "Format region or buffer",
          "type": "command"
        },
        {
          "command": "editor.action.formatDocument",
          "key": "F",
          "name": "Format buffer",
          "type": "command"
        },
        {
          "command": "editor.action.rename",
          "key": "r",
          "name": "Rename symbol",
          "type": "command"
        },
        {
          "command": "editor.action.clipboardPasteAction",
          "key": "p",
          "name": "Paste from clipboard",
          "type": "command"
        },
        {
          "commands": [
            "editor.action.clipboardCopyAction",
            "vscode-neovim.escape"
          ],
          "key": "y",
          "name": "Yank to clipboard",
          "type": "commands"
        },
      ],
      "keys": "c",
      "name": "+Code",
      "type": "bindings"
    },

    // +DEBUG
    {
      "command": "editor.debug.action.conditionalBreakpoint",
      "keys": "d.c",
      "name": "Conditional breakpoint",
      "type": "command"
    },
    {
      "command": "workbench.action.debug.disconnect",
      "keys": "d.d",
      "name": "Disconnect",
      "type": "command"
    },
    {
      "command": "editor.debug.action.showDebugHover",
      "keys": "d.h",
      "name": "Debug hover",
      "type": "command",
      "when": "editorTextFocus && inDebugMode"
    },
    {
      "command": "extension.js-debug.createDebuggerTerminal",
      "keys": "d.j",
      "name": "JavaScript Debug Terminal",
      "type": "command"
    },
    {
      "command": "editor.debug.action.addLogPoint",
      "keys": "d.l",
      "name": "Log point",
      "type": "command"
    },
    {
      "command": "workbench.action.debug.selectandstart",
      "keys": "d.s",
      "name": "Start debug",
      "type": "command"
    },
    {
      "command": "workbench.action.debug.continue",
      "keys": "d.f5",
      "name": "Continue",
      "type": "command",
      "when": "debugState == 'stopped'"
    },
    {
      "command": "workbench.action.debug.stepOver",
      "keys": "d.f10",
      "name": "Step Over",
      "type": "command",
      "when": "debugState == 'stopped'"
    },
    {
      "command": "workbench.action.debug.stepInto",
      "keys": "d.f11",
      "name": "Step Into",
      "type": "command",
      "when": "debugState != 'inactive'"
    },
    {
      "keys": "d.i",
      "position": -1
    },
    {
      "command": "workbench.action.debug.stepOut",
      "keys": "d.f12",
      "name": "Step Out",
      "type": "command",
      "when": "debugState == 'stopped'"
    },
    {
      "keys": "d.o",
      "position": -1
    },

    // +FILE/FIND
    {
      "command": "workbench.action.quickOpen",
      "keys": "f.f",
      "name": "Find file in quick open",
      "type": "command"
    },
    {
      "command": "file-browser.open",
      "keys": "f.F",
      "name": "Find file relative to active file",
      "type": "command"
    },
    {
      "commands": [
        "fileutils.renameFile",
        "workbench.action.focusFirstEditorGroup"
      ],
      "keys": "f.r",
      "name": "Rename file",
      "type": "commands"
    },
    {
      "keys": "f.R",
      "position": -1
    },
    {
      "command": "quokka.createFile",
      "keys": "f.n",
      "name": "New Quokka File",
      "type": "commands"
    },
    {
      "commands": [
        "fileutils.removeFile",
        "workbench.action.focusFirstEditorGroup"
      ],
      "keys": "f.x",
      "name": "Delete file",
      "type": "commands"
    },
    {
      "commands": [
        "workbench.action.localHistory.restoreViaPicker"
      ],
      "keys": "f.X",
      "name": "Restore file",
      "type": "commands"
    },

    // +GIT
    {
      "command": "git.commitAmend",
      "keys": "g.a",
      "name": "Amend commit",
      "type": "command"
    },
    {
      "bindings": [
        {
          "command": "git.checkout",
          "key": "b",
          "name": "Checkout",
          "type": "command"
        },
        {
          "command": "git.deleteBranch",
          "key": "d",
          "name": "Delete",
          "type": "command"
        },
        {
          "command": "git.renameBranch",
          "key": "r",
          "name": "Rename",
          "type": "command"
        },
        {
          "command": "git.rebase",
          "key": "R",
          "name": "Rebase",
          "type": "command"
        }
      ],
      "keys": "g.b",
      "name": "+Branch",
      "type": "bindings"
    },
    {
      "command": "git.openChange",
      "keys": "g.d",
      "name": "Diff",
      "type": "command"
    },
    {
      "command": "lazygit-vscode.toggle",
      "keys": "g.g",
      "name": "Git status",
      "type": "command"
    },
    {
      "command": "workbench.view.scm",
      "keys": "g.G",
      "name": "Git source control",
      "type": "command"
    },
    {
      "command": "gitlens.showQuickFileHistory",
      "keys": "g.h",
      "name": "Git File History",
      "type": "command"
    },
    {
      "command": "gitlens.gitCommands.history",
      "keys": "g.H",
      "name": "Git History Log",
      "type": "command"
    },
    {
      "command": "gitlens.openCommitOnRemote",
      "keys": "g.o",
      "name": "Open commit on remote",
      "type": "command"
    },
    {
      "command": "git.pull",
      "keys": "g.p",
      "name": "Pull",
      "type": "command"
    },
    {
      "command": "git.push",
      "keys": "g.P",
      "name": "Push",
      "type": "command"
    },
    {
      "command": "git.stage",
      "keys": "g.s",
      "name": "Stage",
      "type": "command"
    },
    {
      "command": "git.stageAll",
      "keys": "g.S",
      "name": "Stage all",
      "type": "command"
    },
    {
      "command": "git.unstage",
      "keys": "g.u",
      "name": "Unstage",
      "type": "command"
    },
    {
      "command": "git.unstageAll",
      "keys": "g.U",
      "name": "Unstage all",
      "type": "command"
    },
    {
      "command": "git.clean",
      "keys": "g.x",
      "name": "Discard changes in current file",
      "type": "command"
    },
    {
      "command": "git.cleanAll",
      "keys": "g.X",
      "name": "Discard all changes",
      "type": "command"
    },
    {
      "command": "git.stash",
      "keys": "g.z",
      "name": "Stash",
      "type": "command"
    },
    {
      "command": "git.stashApply",
      "keys": "g.Z",
      "name": "Stash apply",
      "type": "command"
    },

    // +LOGGING
    {
      "bindings": [
        {
          "command": "turboConsoleLog.commentAllLogMessages",
          "key": "c",
          "name": "Comment out all log messages",
          "type": "command"
        },
        {
          "command": "turboConsoleLog.displayLogMessage",
          "key": "l",
          "name": "Log message",
          "type": "command"
        },
        {
          "command": "turboConsoleLog.deleteAllLogMessages",
          "key": "d",
          "name": "Delete log messages",
          "type": "command"
        },
        {
          "command": "turboConsoleLog.uncommentAllLogMessages",
          "key": "u",
          "name": "Uncomment all log messages",
          "type": "command"
        }
      ],
      "keys": "l",
      "name": "+Logging",
      "type": "bindings"
    },

    // +MARKS/BOOKMARKS
    {
      "bindings": [
        {
          "command": "bookmarks.clear",
          "key": "c",
          "name": "Clear marks",
          "type": "command"
        },
        {
          "command": "bookmarks.clearFromAllFiles",
          "key": "C",
          "name": "Clear all marks",
          "type": "command"
        },
        {
          "command": "bookmarks.listFromAllFiles",
          "key": "l",
          "name": "List marks (ctrl + shift + m)",
          "type": "command"
        },
        {
          "command": "bookmarks.jumpToNext",
          "key": "n",
          "name": "Jump to next",
          "type": "command"
        },
        {
          "command": "bookmarks.jumpToPrevious",
          "key": "p",
          "name": "Jump to previous",
          "type": "command"
        },
        {
          "command": "bookmarks.toggle",
          "key": "t",
          "name": "Toggle mark",
          "type": "command"
        },
        {
          "command": "bookmarks.toggleLabeled",
          "key": "T",
          "name": "Toggle labled mark",
          "type": "command"
        }
      ],
      "keys": "m",
      "name": "+Marks/Bookmarks",
      "type": "bindings"
    },

    // +SEARCH
    {
      "commands": [
        "editor.action.addSelectionToNextFindMatch",
        "workbench.action.findInFiles"
      ],
      "keys": "s.w",
      "name": "Search word under cursor",
      "type": "commands"
    },
    {
      "commands": [
        "workbench.action.findInFiles"
      ],
      "keys": "s.w",
      "name": "Search word",
      "type": "commands"
    },

    // MISC
    {
      "command": "markdown.extension.checkTaskList",
      "keys": "t.x",
      "name": "[x] Markdown Checklist",
      "type": "command"
    },
    {
      "command": "workbench.action.closeAllGroups",
      "keys": "w.D",
      "name": "Close all editor groups",
      "type": "command"
    },
    {
      "command": "workbench.action.toggleMaximizeEditorGroup",
      "keys": "w.m",
      "name": "Maximize Editor Group Toggle",
      "type": "command"
    },
    {
      "command": "workbench.action.maximizeEditorHideSidebar",
      "keys": "w.M",
      "name": "Maximize Editor Group and Hide Sidebar",
      "type": "command"
    },
  ],
  "whichkey.showIcons": true,
  "whichkey.sortOrder": "nonNumberFirst",
  "window.commandCenter": false,
  "workbench.activityBar.location": "bottom",
  "workbench.colorCustomizations": {
    // Colors to match - https://github.com/ayu-theme/ayu-colors?tab=readme-ov-file
    "editorSuggestWidget.selectedBackground": "#c1d6eb40",
    "list.activeSelectionBackground": "#409FFF40",
    "list.focusBackground": "#409FFF40",
    "list.hoverBackground": "#409FFF40",
    "list.inactiveSelectionBackground": "#409FFF40",
    "terminalCursor.foreground": "#FFCC66",
    "tab.activeBorderTop": "#FFCC66", // if using CSS-JS Loader
    "editorIndentGuide.activeBackground1": "#FFCC66",
    "editorBracketPairGuide.activeBackground1": "#FFCC66",
    "editorBracketPairGuide.activeBackground2": "#FFCC66",
    "editorBracketPairGuide.activeBackground3": "#FFCC66",
    "editorBracketPairGuide.activeBackground4": "#FFCC66",
    "editorBracketPairGuide.activeBackground5": "#FFCC66",
    "editorBracketPairGuide.activeBackground6": "#FFCC66"
  },
  "workbench.colorTheme": "Ayu Mirage",
  "workbench.iconTheme": "catppuccin-frappe",
  "workbench.layoutControl.enabled": false,
  "workbench.list.defaultFindMatchType": "contiguous",
  "workbench.sideBar.location": "right",
  "workbench.startupEditor": "none",
  "workbench.tips.enabled": false,
  "workbench.tree.renderIndentGuides": "none",
  "workbench.editor.showTabs": "single",
  "breadcrumbs.symbolPath": "off",
  "terminal.integrated.tabs.description": "${task}${separator}${local}${separator}",
  "editor.bracketPairColorization.enabled": false,
  "gitlens.views.scm.grouped.views": {
    "commits": false,
    "branches": false,
    "remotes": false,
    "stashes": false,
    "tags": false,
    "worktrees": false,
    "contributors": false,
    "repositories": false,
    "searchAndCompare": false,
    "launchpad": false
  },
  "git.autofetch": true,
  "git.pullTags": false,
  "typeChallenges.workspaceFolder": "",
  "lazygit-vscode.autoMaximizeWindow": true,
}
